### The package object

```
Example Package object
```
```json
<%= yield_content :single_bits_package %>
```

Name | Type | Description
---- | ---- | -----------
**guid** | _uuid_ | Unique identifier for the package
**created_at** | _[timestamp](#timestamps)_ | The time with zone when the object was created
**updated_at** | _[timestamp](#timestamps)_ | The time with zone when the object was last updated
**type** | _string_ | Package type; valid values are `bits`, `docker`
**data** | _object_ | Data for package type (see below)
**state** | _string_ | State of the package; valid states are `AWAITING_UPLOAD`, `PROCESSING_UPLOAD`, `READY`, `FAILED`, `COPYING`, `EXPIRED`
**relationships.app** | [_to-one relationship_](#to-one-relationships) | The app the package belongs to
**metadata.labels** | [_label object_](#labels) | Labels applied to the package
**metadata.annotations**  | [_annotation object_](#annotations) | Annotations applied to the package
**links** | [_links object_](#links) | Links to related resources

#### Bits package data

A bits package is used to upload source code for an app to. The bits package will provide an `upload` link to which a zip file should be uploaded.

Name | Type | Description
---- | ---- | -----------
**data.error** | _string_ | If an error occurs this field will contain the error message
**data.checksum.type** | _string_ | The checksum type, for example: `sha256`
**data.checksum.value** | _string_ | The checksum value; this will be populated after bits are uploaded

#### Docker package data

A Docker package references a Docker image from a registry.

Name | Type | Description
---- | ---- | -----------
**data.image** | _string_ | The registry address of the image
**data.username** | _string_ | The username for the image's registry
**data.password** | _string_ | The password for the image's registry
